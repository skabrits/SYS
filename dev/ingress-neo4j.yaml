apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-neo4j-http
  namespace: dev
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 10000m
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "10"
    cert-manager.io/cluster-issuer: letsencrypt-cluster
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "true"
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://gnj.skabrits.duckdns.org"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: nj.skabrits.duckdns.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: arbitraz-lb-neo4j
            port:
              number: 7687
  - host: gnj.skabrits.duckdns.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: arbitraz-lb-neo4j
            port:
              number: 7474
  tls:
  - hosts:
    - nj.skabrits.duckdns.org
    - gnj.skabrits.duckdns.org
    secretName: neo4j-cert-cert
