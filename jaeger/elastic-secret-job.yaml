apiVersion: batch/v1
kind: Job
metadata:
  name: jaeger-elastic-secret
  namespace: observability
  annotations:
    argocd.argoproj.io/sync-wave: "6"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  template:
    spec:
      containers:
      - name: secret-creator
        image: bitnami/kubectl:1.31.1
        command: ["bash", "-c", "PASSWORD=$(kubectl get secret elastic-es-elastic-user -n elastic -o=jsonpath='{.data.elastic}' | base64 --decode) && kubectl create secret generic jaeger-secret --from-literal=ES_PASSWORD=${PASSWORD} --from-literal=ES_USERNAME=elastic -n jaeger --dry-run=client -o yaml | kubectl apply -f -"]
      restartPolicy: Never
      serviceAccountName: jaeger-job-sa
  backoffLimit: 4
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jaeger-job
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jaeger-job-watch-rb
subjects:
  - kind: ServiceAccount
    name: jaeger-job-sa
    namespace: observability
roleRef:
  kind: ClusterRole
  name: jaeger-job
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaeger-job-sa
  namespace: observability
secrets:
  - name: jaeger-job-sa-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: jaeger-job-sa-secret
  namespace: observability
  annotations:
    kubernetes.io/service-account.name: jaeger-job-sa
type: kubernetes.io/service-account-token
